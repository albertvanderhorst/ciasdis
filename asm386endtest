

# FILES      Preferred name      PURPOSE
# as1        prelude1            For the generation of testset 1 (before assembler)
# as2        postlude1           For the generation of testset 1 (after assembler)
# as3        test1               Testset 1, i.e. interpreting the raw output of SHOW-ALL
#                                Can be run with prelude1
# as4        assembly1           An assembly test file with official opcodes
# as5        temp1               Raw output of test1
# as6a       hex1                The raw data whose disassembly would be assembly1
# as6        test2               Testset 2, i.e. interpreting official assembly1
# as7        assembly2           The output after assembly + disassmbly of assembly1
# as8        temp2               Raw output of test2
# as9        hex2                The raw data whose disassembly would be assembly2
# as10       assdiff             The difference between assembly1 and assembly2 
# as11        hexdiff             The difference between hex1 and hex2 

cat >/tmp/as1<<\%%
( ( )
8 LOAD
( ( )

( GET RANDOM NUMBERS )
: TIME 1 2 ;
60 LOAD
 122 SEED !
%%

cat >/tmp/as2<<\%%
( Install a disassembly shower that insert random data for the commaers. )
( and preceede each line with a random number )
: .DISS-RAND 
RAND 0 8 D.R SPACE
DISS @+ SWAP DO
    I @ DUP IS-COMMA IF RAND . THEN ID.
 0 CELL+ +LOOP CR ;
' .DISS-RAND CFA 'DISS !

." TEST STARTS HERE" CR SHOW-ALL  CR ." TEST STOPS HERE" CR 
( Now get Linux to snip and sort this and feed it to the next part)
BYE 
%%
cat >/tmp/as3<<\%%
!TALLY 
HEX
10 HERE 10 MOD - ALLOT ( To get a nice DUMP)
HERE
' C, CFA  % SIB,, >DATA !
%%

cat /tmp/as1 asgen.frt asi586.frt /tmp/as2 |
lina |
sed '1,/TEST STARTS HERE/d' |
sed '/TEST STOPS HERE/,$d' |
sort |
sed 's/^.........//g'|
grep -v '^~'|
cat >>/tmp/as3

cat >>/tmp/as3<<\%%
." TEST STARTS HERE" HERE 2DUP OVER - DUMP 
." TEST MIDDLE HERE" CR DIS-RANGE CR ." TEST STOPS HERE"
BYE
%%


cat /tmp/as1 asgen.frt asi586.frt /tmp/as3 |
lina |
sed '1,/TEST STARTS HERE/d' |
sed '/TEST STOPS HERE/,$d' |
tee /tmp/as5 |
sed '1,/TEST MIDDLE HERE/d' > /tmp/as4 

cat /tmp/as5 | 
 sed '/TEST MIDDLE HERE/,$d' |
 sed 's/^[0-9A-F \.]*: /DB /' |
 sed 's/ |.*$//'             |
 sed 's/ \(..\)\(..\)/,0x\1,0x\2/g'   |
 sed 's/DB,/ DB /' >/tmp/as6a



cat >/tmp/as6<<\%%
!TALLY 
HEX
10 HERE 10 MOD - ALLOT ( To get a nice DUMP)
HERE
%%

cat /tmp/as4 >> /tmp/as6

cat >>/tmp/as6<<\%%
." TEST STARTS HERE" HERE 2DUP OVER - DUMP 
." TEST MIDDLE HERE" CR DIS-RANGE CR ." TEST STOPS HERE"
BYE
%%


cat /tmp/as1 asgen.frt asi586.frt /tmp/as6 |
lina |
sed '1,/TEST STARTS HERE/d' |
sed '/TEST STOPS HERE/,$d' |
tee /tmp/as8 |
sed '1,/TEST MIDDLE HERE/d' > /tmp/as7 

cat /tmp/as8 | 
 sed '/TEST MIDDLE HERE/,$d' |
 sed 's/^[0-9A-F \.]*: /DB /' |
 sed 's/ |.*$//'             |
 sed 's/ \(..\)\(..\)/,0x\1,0x\2/g'   |
 sed 's/DB,/ DB /' >/tmp/as9

echo Now this should be empty >/tmp/as10
diff -w /tmp/as6 /tmp/as7 >>/tmp/as10
diff -w /tmp/as6a /tmp/as9 >>/tmp/as11

# generates as9.o
nasm /tmp/as9 -felf
objdump --all-headers /tmp/as9.o --disassemble >as9.cmp
