( $Id$ )
( Copyright{2000}: Albert van der Horst, HCC FIG Holland by GNU Public License)
( Uses Richard Stallmans convention. Uppercased word are parameters.    )

HEX INIT-ALL
INCLUDE elf.cul


0804,839C  LABEL dovar
0804,879D EQU last_dea_base
0804,85E5 EQU last_dea_literal


CREATE NAME-BUFFER 0 , 256 ALLOT
\ Prepend to NAME a PREFIX, return prefixed NAME in a static buffer.
: PRE-PEND NAME-BUFFER $! NAME-BUFFER $+! NAME-BUFFER $@ ;

\ Transform NAME into: NAMELABEL (prepended "N_").
: >N_  "N_" PRE-PEND ;

\ ADDRESS points to a valid name. Add a label to address the name.
: ADD-NAME-LABEL   DUP th COUNT >N_ INSERT-EQU ;

\ ADDRESS points to a valid dea. Add a label to address the dea(header).
\ Assume that just before the dea's name has been analysed.
: ADD-DEA-LABEL   &H NAME-BUFFER CELL+ C!   NAME-BUFFER $@ INSERT-EQU ;

\ ADDRESS points to a valid code address. Lets call that an execution token.
\ Assume that just before the dea's name has been analysed.
: ADD-CODE-LABEL   &X NAME-BUFFER CELL+ C!   NAME-BUFFER $@ INSERT-EQU ;

\ ADDRESS points to a valid name.
\ Add an anonymous section to disassemble the name.
: ADD-NAME-SECTION   DUP B@ OVER + 1 + -d$- ;

\ ADDRESS points to a dea.
\ Add an anonymous section to disassemble the dea.
: ADD-DEA-SECTION   DUP 8 + -dl- ;

\ Add an anonymous section to disassemble the code (5 byte call) of a
\ variable whose code ADDRESS is given. And a 4 byte section for the
\ content.
: ADD-VAR-SECTIONS   >R   R@ R@ 5 + -dc-   R@ 5 + R@ 9 + -dl-   RDROP ;

\ Add the information that ADDRESS is a nfa.
: IS-A-NAME DUP B@ 0 31 WITHIN 0= ABORT" UNPLAUSIBLE LENGTH"
    DUP ADD-NAME-LABEL ADD-NAME-SECTION ;

\ Accumulate the information that ADDRESS contains a code field address.
\ For variables the code ends after the call, so we don't want to crawl.
: IS-A-CFA   L@ DUP ADD-CODE-LABEL
    DUP 1+ L@ OVER 5 + + dovar = IF ADD-VAR-SECTIONS ELSE CRAWL THEN ;

\ Accumulate the information that DEA is a dea.
: IS-A-DEA   DUP 8 + IS-A-NAME  DUP ADD-DEA-LABEL
             DUP 4 + IS-A-CFA   DUP ADD-DEA-SECTION
DROP ;

\ Accumulate the information from DEA, follow the link field.
: CRAWL-DEA BEGIN DUP IS-A-DEA L@ DUP PLAUSIBLE-LABEL? 0= UNTIL DROP ;

SORT-ALL

last_dea_base CRAWL-DEA
last_dea_literal CRAWL-DEA
dovar CRAWL
ELF-CRAWL

\ Code addresses after CALL's (by hand)
0804,84C8 CRAWL
0804,84B6 CRAWL
0804,840E CRAWL
0804,8404 CRAWL
0804,839B CRAWL

0804,87AF 0804,87D7 -dl-

\ 0804,81E4 CRAWL
\ 0804,81D6 CRAWL
\ 0804,818A CRAWL
\ 0804,8165 CRAWL
\ 0804,8145 CRAWL
\ 0804,812C CRAWL
\ 0804,811A CRAWL
\ 0804,810D CRAWL
\ 0804,8105 CRAWL
\ 0804,80AD CRAWL
\ 0804,8082 CRAWL
\
\ 0804,8604 CRAWL
\ 0804,85C8 CRAWL
\ 0804,8524 CRAWL
\ 0804,8500 CRAWL
\ 0804,81CF CRAWL
\
\ 0804,869D CRAWL
\ 0804,8570 CRAWL
\ 0804,84F9 CRAWL
\ 0804,84F2 CRAWL
\ 0804,81C4 CRAWL
\
\ 0804,86C7 CRAWL
\ 0804,868C CRAWL
\ 0804,85D9 CRAWL
\ 0804,856B CRAWL
\ 0804,84E9 CRAWL
\ 0804,84A7 CRAWL
\ 0804,843B CRAWL
\ 0804,82FD CRAWL
\ 0804,828C CRAWL
\ 0804,81B5 CRAWL
\ 0804,81AF CRAWL
\ 0804,8059 CRAWL

MAKE-CUL
"----------------" TYPE CR
\ DISASSEMBLE-ALL
EXIT

\ User area contains longs
init_user       DUP 100 + -dl-
\ Yet another buffer
0804,DA0C       DUP 200 + -dl-
\ The data fields of vocabularies consist of pointers.
H_DENOTATION    DUP 10 + -dl-
H_ENVIRONMENT   DUP 10 + -dl-
H_FORTH         DUP 10 + -dl-

CLEANUP-SECTIONS
MAKE-CUL
PLUG-HOLES
MAKE-CUL
DISASSEMBLE-ALL
